# Exec on startup
exec fcitx5 & wl-paste --watch cliphist store & swayosd-server & swaync & nm-applet & floorp & wezterm

# exec dbus-daemon --session --address=unix:path=$XDG_RUNTIME_DIR/bus
### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# Recommends: foot
set $term wezterm

set $menu "rofi -combi-modi drun,run,window -show combi -show-icons"

set $file-manager thunar 

bar {
  swaybar_command waybar 
}

# Theme 
# set $gnome-schema org.gnome.desktop.interface
# exec_always {
#     gsettings set $gnome-schema gtk-theme 'Catppuccin-Macchiato-Standard-Blue-Dark'
#     gsettings set $gnome-schema font-name 'Noto Sans'
# }

# Hide title bar
default_border pixel 3
default_floating_border pixel 3
# Hide borders if there is only one child in a workspace or container
hide_edge_borders --i3 smart

# Gaps
gaps inner 4 

### Output configuration

output * bg ~/Pictures/wallpapers/catppuccin-coffee.png fill
#
# Example configuration:
#
output HDMI-A-1 resolution 1920x1200@74.930Hz position 1920,0

output eDP-1 resolution 1920x1200@60.001Hz position 0,0 scale 1.0 
# You can get the names of your outputs by running: swaymsg -t get_outputs

# Pin workspaces to output
workspace 1 output HDMI-A-1
workspace 2 output HDMI-A-1
workspace 3 output HDMI-A-1
workspace 4 output HDMI-A-1

workspace 6 output eDP-1
workspace 7 output eDP-1
workspace 8 output eDP-1
### Idle configuration
#
# Example configuration:

exec swayidle -w \
        timeout 240 'light -O && light -S 5' \
            resume 'light -I' \
        timeout 270 'swaylock -f' \
        timeout 300 'swaymsg "output * power off"' \
            resume 'swaymsg "output * power on"'  \
        timeout 360 'systemctl suspend' \
        before-sleep 'swaylock -f' \

# Disable displays on idle
# exec command -v swayidle >/dev/null && swayidle -w \
#        timeout 300 'swaymsg "output * power off"' \
#             resume 'swaymsg "output * power on"'

### Input configuration
input "1267:12693:ELAN0676:00_04F3:3195_Touchpad" {
    tap enabled
    natural_scroll enabled 
    middle_emulation enabled
}

input "1:1:AT_Translated_Set_2_keyboard" {
    xkb_layout us
}
#
### Key bindings
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+t exec $file-manager
    # Toggle control center
    bindsym $mod+Shift+n exec swaync-client -t -sw

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym Mod4+shift+e exec swaynag \
        -t warning \
        -m 'What do you want to do?' \
        -b 'Poweroff' 'systemctl poweroff' \
        -b 'Reboot' 'systemctl reboot'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # Assign applications to specific workspaces
    assign [app_id="org.mozilla.firefox"] workspace number 1
    assign [app_id="floorp"] workspace number 1
    assign [class="Brave-browser"] workspace number 1
    assign [app_id="org.wezfurlong.wezterm"] workspace number 2
    assign [app_id="foot"] workspace number 2
    assign [class="jetbrains-idea"] workspace number 2
    assign [class="code"] workspace number 2
    assign [class="obsidian"] workspace number 3
    assign [class="StarUML"] workspace number 4
    assign [class="teams-for-linux"] workspace number 4
    assign [app_id="thunderbird"] workspace number 6
    assign [class="discord"] workspace number 7
    assign [class="Spotify"] workspace number 8
    assign [class="steam"] workspace number 9

    # layout rules
    for_window [app_id="thunar"] floating enable
    for_window [class="Bitwarden"] floating enable


# apply mark for Xwayland and wayland native browser windows
    for_window [class="Chromium-browser"] mark Browser
    for_window [class="floorp"] mark Browser
    for_window [class="Brave-browser"] mark Browser
    for_window [class="firefox"]  mark Browser
    for_window [app_id="Chromium-browser"] mark Browser
    for_window [app_id="brave-browser"] mark Browser
    for_window [app_id="floorp"] mark Browser
    for_window [app_id="firefox"] mark Browser

# inhibit scrensaver for fullscreen browser windows
    for_window [con_mark="Browser"] { inhibit_idle fullscreen }

#
# Layout stuff:
#
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
    
    # Move focus to the child container
    bindsym $mod+z focus child 

# Scratchpad:
#
    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Laptop swipe to change ws
bindgesture swipe:right workspace prev 
bindgesture swipe:left workspace next 

bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Brightness raise with custom value('+' sign needed)
bindsym XF86MonBrightnessUp  exec light -A 5
# Brightness lower with custom value('-' sign needed)
bindsym XF86MonBrightnessDown exec light -U 5

# Media control
bindsym --locked {
    XF86AudioPlay       exec playerctl play-pause
    XF86AudioStop       exec playerctl stop
}

bindsym {
    XF86AudioForward    exec playerctl position +5
    XF86AudioNext       exec playerctl next
    XF86AudioPause      exec playerctl pause
    XF86AudioPrev       exec playerctl previous
    XF86AudioRewind     exec playerctl position -5
}

# Display PulseAudio volume control application (both GTK and Qt varieties)
# as a floating window.

for_window [app_id="pavucontrol"] {
    floating enable
    move position center
}

for_window [app_id="pavucontrol-qt"] {
    floating enable
    move position center
}

# Lock screen after closing lid
# bindswitch --reload --locked lid:on output eDP-1 disable
# bindswitch --reload --locked lid:off output eDP-1 enable

bindsym {
    # Capture the currently active output
    Print       exec grimshot --notify save output
    # Capture the currently active window
    Alt+Print   exec grimshot --notify save active
    # Select and capture a custom rectangular area
    Ctrl+Print  exec grimshot --notify save area
}

# clipboard history
bindsym $mod+Shift+v exec cliphist list | rofi -dmenu | cliphist decode | wl-copy

include /etc/sway/config.d/*
